---
- name: Refresh inventory to update EC2 instances information
  meta: refresh_inventory

- name: Find Route53 hosted zone
  route53_facts:
    hosted_zone_id: "{{ route53_hosted_zone_id }}"
    query: hosted_zone
    hosted_zone_method: details
  register: route53_find_hosted_zone

- set_fact:
    route53_hosted_zone: "{{ route53_find_hosted_zone.HostedZone.Name }}"

- name: Create DNS entry for bastion
  route53:
    record: "bastion.{{ openshift_public_hostname }}"
    hosted_zone_id: "{{ route53_hosted_zone_id }}"
    zone: "{{ route53_hosted_zone }}"
    type: A
    ttl: 300
    value: "{{ hostvars[(groups.openshift_role_master | intersect(groups['openshift_cluster_' + cluster_group_name]) | first)].public_ip_address }}"
    state: present

- name: Create DNS entry for API
  route53:
    record: "{{ openshift_public_hostname }}"
    hosted_zone_id: "{{ route53_hosted_zone_id }}"
    zone: "{{ route53_hosted_zone }}"
    type: A
    ttl: 300
    value: "{{ hostvars[(groups.openshift_role_master | intersect(groups['openshift_cluster_' + cluster_group_name]) | first)].public_ip_address }}"
    state: present

- name: Create wildcard DNS entry for apps
  route53:
    record: "*.apps.{{ openshift_public_hostname }}"
    hosted_zone_id: "{{ route53_hosted_zone_id }}"
    zone: "{{ route53_hosted_zone }}"
    type: A
    ttl: 300
    value: "{{ hostvars[(groups.openshift_role_infra | intersect(groups['openshift_cluster_' + cluster_group_name]) | first)].public_ip_address }}"
    state: present
